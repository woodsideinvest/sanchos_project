// Функция для обновления минимального и максимального значения на основе выбранного планаfunction updateMinMax(planType) {    var select = $("#plan_" + planType);    var selectedOption = select.find("option:selected");    var minAmount = parseInt(selectedOption.data("min-amount"));    var maxAmount = parseInt(selectedOption.data("max-amount"));    var amountInput = $("#amount_" + planType);    amountInput.attr("min", minAmount);    amountInput.attr("max", maxAmount);    // Опционально, вы можете также обновить значение инпута, если оно выходит за пределы новых минимальных и максимальных значений.    var currentAmount = parseInt(amountInput.val());    if (currentAmount < minAmount) {        amountInput.val(minAmount);    } else if (currentAmount > maxAmount) {        amountInput.val(maxAmount);        // Также изменяем выбранную опцию в селекте        select.val(select.find("option[data-max-amount='" + maxAmount + "']").val());    }}// Вызываем функцию при загрузке страницы для установки начальных значений$(document).ready(function () {    updateMinMax("energy");    // Добавляем обработчик изменения селекта    $("#plan_energy").change(function () {        updateMinMax("energy");    });    updateMinMax("gas");    // Добавляем обработчик изменения селекта    $("#plan_gas").change(function () {        updateMinMax("gas");    });    // Добавляем обработчик изменения инпута    $("#amount_gas").change(function () {        updateMinMax("gas");    });    // Добавляем обработчик изменения инпута    $("#amount_energy").change(function () {        updateMinMax("energy");    });    // Вызываем функции пересчета дохода    $("#plan_gas").change(function () {        calculateIncome("gas");    });    $("#amount_gas").change(function () {        calculateIncome("gas");    });    $("#plan_energy").change(function () {        calculateIncome("energy");    });    $("#amount_energy").change(function () {        calculateIncome("energy");    });});// Устанавливаем значение по умолчанию для плана и суммы для Gas Industrydocument.addEventListener("DOMContentLoaded", function () {    var selectGas = document.getElementById("plan_gas");    selectGas.selectedIndex = 0; // Выбираем первый план для Gas Industry по умолчанию    var amountInputGas = document.getElementById("amount_gas");    amountInputGas.value = 500; // Устанавливаем сумму для Gas Industry по умолчанию    calculateIncome("gas"); // Пересчитываем доход для Gas Industry    var selectEnergy = document.getElementById("plan_energy");    selectEnergy.selectedIndex = 0; // Выбираем первый план для Alternative Energy по умолчанию    var amountInputEnergy = document.getElementById("amount_energy");    amountInputEnergy.value = 500; // Устанавливаем сумму для Alternative Energy по умолчанию    calculateIncome("energy"); // Пересчитываем доход для Alternative Energy});// Функция для отображения информации о выбранном планеfunction displayRateInfo(planType) {    var select = document.getElementById("plan_" + planType);    var selectedOption = select.options[select.selectedIndex];    var duration = selectedOption.getAttribute("data-duration");    var planInfoDiv = document.getElementById("plan_info_" + planType);    planInfoDiv.textContent = "Duration: " + duration;}// Функция для автоматического расчета дохода при изменении полейfunction calculateIncome(planType) {    var select = document.getElementById("plan_" + planType);    var selectedOption = select.options[select.selectedIndex];    var rate = parseFloat(selectedOption.value);    var amountInput = document.getElementById("amount_" + planType);    var amount = parseFloat(amountInput.value);    if (isNaN(rate) || isNaN(amount)) {        return;    }    var income = rate * amount;    var resultDiv = document.getElementById("result_" + planType);    resultDiv.innerHTML = "Estimated income: <span id=\"income_" + planType + "\">" + income.toFixed(2) + "</span>$ every day <span id=\"duration_" + planType + "\">" + selectedOption.getAttribute("data-duration") + "</span>";}// Добавляем слушатели событий на изменения полей формы для Gas Industrydocument.getElementById("plan_gas").addEventListener("change", function () {    displayRateInfo("gas");    calculateIncome("gas");});document.getElementById("amount_gas").addEventListener("input", function () {    calculateIncome("gas");});// Добавляем слушатели событий на изменения полей формы для Alternative Energydocument.getElementById("plan_energy").addEventListener("change", function () {    displayRateInfo("energy");    calculateIncome("energy");});document.getElementById("amount_energy").addEventListener("input", function () {    calculateIncome("energy");});// Вызываем функции для инициализацииdisplayRateInfo("gas");calculateIncome("gas");displayRateInfo("energy");calculateIncome("energy");